import maxichrome from "./dist/index.cjs";

const contrast = async color => (await maxichrome(1, [color]))[0]

const row = colors => colors.map(
  (color) => `<td style="background:${color}">${color}</td>`
).join('');

(async () => {
  // Twelve different colors different from each other
  const lightColors = await maxichrome(12, ['black']);
  const darkColors = await maxichrome(12, ['white']);
  const anyColors = await maxichrome(12);
  const contrastColors = []
  for(const color of anyColors) {
    contrastColors.push(await contrast(color))
  }

  const contrastRow = colors => colors.map(
    (color, i) => `<td style="color:${contrastColors[i]}; background:${color}">${color}</td>`
  ).join('');


  console.log(`
<html>
  <head>
    <title>Palettes of 12 Generated by Maxichrome</title>
    <style>
      table{
        border-spacing: 0;
      }
      td{
        padding: 7em 1em;
      }
    </style>
  </head>
  <body>
    <h1>Palettes of 12 Generated by Maxichrome</h1>
    <table>
      <tr style="color:black">
        <th>Colors for black text</th>
        ${row(lightColors)}
      </tr>
      <tr style="height:1em"></tr>
      <tr style="color:white">
        <th style="color:black">Colors for white text</th>
        ${row(darkColors)}
      </tr>
      <tr style="height:1em"></tr>
      <tr>
        <th>Colors, ignoring text color</th>
        ${contrastRow(anyColors)}
      </tr>
    <table>
  </body>
</html>
`);
})();
